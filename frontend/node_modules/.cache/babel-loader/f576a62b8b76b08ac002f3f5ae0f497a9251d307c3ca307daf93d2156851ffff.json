{"ast":null,"code":"var _jsxFileName = \"/Users/mkkbnv/go/src/grpc-react-web/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport { EchoClient } from './jsclient/echo_grpc_web_pb';\nimport { Msg } from './jsclient/echo_pb';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass GrpcClient extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChangeText = event => {\n      this.setState({\n        inputText: event.target.value\n      });\n    };\n    this.handleChangeImage = event => {\n      const file = event.target.files[0];\n      this.setState({\n        inputImage: file\n      });\n    };\n    this.handleSendText = () => {\n      const {\n        inputText\n      } = this.state;\n      const grpcService = new EchoClient('http://localhost:8080'); // Replace with your gRPC server URL\n      grpcService.Msg(inputText, response => {\n        this.setState({\n          responseText: response.getMessage()\n        });\n      });\n    };\n    this.handleSendImage = () => {\n      const {\n        inputImage\n      } = this.state;\n      const grpcService = new EchoClient('http://localhost:8080'); // Replace with your gRPC server URL\n      grpcService.sendImage(inputImage, response => {\n        // Handle the image upload response here\n        // For example, you can display the image uploaded\n      });\n    };\n    this.state = {\n      inputText: '',\n      inputImage: null,\n      responseText: ''\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"gRPC Client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter text\",\n          value: this.state.inputText,\n          onChange: this.handleChangeText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleSendText,\n          children: \"Send Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.handleChangeImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleSendImage,\n          children: \"Send Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Response:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.responseText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default GrpcClient;","map":{"version":3,"names":["React","Component","EchoClient","Msg","jsxDEV","_jsxDEV","GrpcClient","constructor","props","handleChangeText","event","setState","inputText","target","value","handleChangeImage","file","files","inputImage","handleSendText","state","grpcService","response","responseText","getMessage","handleSendImage","sendImage","render","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick"],"sources":["/Users/mkkbnv/go/src/grpc-react-web/frontend/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { EchoClient } from './jsclient/echo_grpc_web_pb';\nimport { Msg } from './jsclient/echo_pb';\n\nclass GrpcClient extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputText: '',\n      inputImage: null,\n      responseText: '',\n    };\n  }\n\n  handleChangeText = (event) => {\n    this.setState({ inputText: event.target.value });\n  };\n\n  handleChangeImage = (event) => {\n    const file = event.target.files[0];\n    this.setState({ inputImage: file });\n  };\n\n  handleSendText = () => {\n    const { inputText } = this.state;\n    const grpcService = new EchoClient('http://localhost:8080'); // Replace with your gRPC server URL\n    grpcService.Msg(inputText, (response) => {\n      this.setState({ responseText: response.getMessage() });\n    });\n  };\n\n  handleSendImage = () => {\n    const { inputImage } = this.state;\n    const grpcService = new EchoClient('http://localhost:8080'); // Replace with your gRPC server URL\n    grpcService.sendImage(inputImage, (response) => {\n      // Handle the image upload response here\n      // For example, you can display the image uploaded\n\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>gRPC Client</h1>\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Enter text\"\n            value={this.state.inputText}\n            onChange={this.handleChangeText}\n          />\n          <button onClick={this.handleSendText}>Send Text</button>\n        </div>\n        <div>\n          <input type=\"file\" onChange={this.handleChangeImage} />\n          <button onClick={this.handleSendImage}>Send Image</button>\n        </div>\n        <div>\n          <p>Response:</p>\n          <p>{this.state.responseText}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GrpcClient;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}