{"ast":null,"code":"var _jsxFileName = \"/Users/mkkbnv/go/src/grpc-react-web/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport { AccessClient } from './jsclient/echo_grpc_web_pb';\nimport { AccessRequest } from './jsclient/echo_pb';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass GrpcClient extends Component {\n  constructor(props) {\n    super(props);\n    this.handleTextChange = event => {\n      this.setState({\n        inputText: event.target.value\n      });\n    };\n    this.handleFileChange = event => {\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n    this.handleSendRequest = () => {\n      const {\n        inputText,\n        selectedFile\n      } = this.state;\n      const client = new AccessClient('http://envoy:8080', null, null);\n      const reader = new FileReader();\n      reader.onload = () => {\n        const imageBytes = new Uint8Array(reader.result);\n        const request = new AccessRequest();\n        request.setId(inputText);\n        request.setFileName(selectedFile.name);\n        request.setChunk(imageBytes);\n        client.accessCheck(request, {}, (err, response) => {\n          if (!err) {\n            const responseText = response.getAccess();\n            console.log('Response:', responseText);\n            this.setState({\n              responseText: response.getAccess().toString()\n            });\n          } else {\n            console.error('Error:', err);\n          }\n        });\n      };\n      if (selectedFile) {\n        reader.readAsArrayBuffer(selectedFile);\n      } else {\n        console.error('No file selected.');\n      }\n    };\n    this.state = {\n      inputText: '',\n      selectedFile: null,\n      responseText: ''\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter text\",\n          value: this.state.inputText,\n          onChange: this.handleTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: this.handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleSendRequest,\n          children: \"Send Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Response:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.responseText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default GrpcClient;","map":{"version":3,"names":["React","Component","AccessClient","AccessRequest","jsxDEV","_jsxDEV","GrpcClient","constructor","props","handleTextChange","event","setState","inputText","target","value","handleFileChange","selectedFile","files","handleSendRequest","state","client","reader","FileReader","onload","imageBytes","Uint8Array","result","request","setId","setFileName","name","setChunk","accessCheck","err","response","responseText","getAccess","console","log","toString","error","readAsArrayBuffer","render","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","accept","onClick"],"sources":["/Users/mkkbnv/go/src/grpc-react-web/frontend/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { AccessClient } from './jsclient/echo_grpc_web_pb';\nimport { AccessRequest } from './jsclient/echo_pb';\n\n\nclass GrpcClient extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputText: '',\n      selectedFile: null,\n      responseText: '',\n    };\n  }\n\n  handleTextChange = (event) => {\n    this.setState({ inputText: event.target.value });\n  };\n\n  handleFileChange = (event) => {\n    this.setState({ selectedFile: event.target.files[0] });\n  };\n\n  handleSendRequest = () => {\n    const { inputText, selectedFile } = this.state;\n\n    const client = new AccessClient('http://envoy:8080', null, null);\n\n    const reader = new FileReader();\n    reader.onload = () => {\n      const imageBytes = new Uint8Array(reader.result);\n\n      const request = new AccessRequest();\n      request.setId(inputText);\n      request.setFileName(selectedFile.name);\n      request.setChunk(imageBytes);\n      \n      client.accessCheck(request, {}, (err, response) => {\n        if (!err) {\n          const responseText = response.getAccess();\n          console.log('Response:', responseText);\n          this.setState({ responseText: response.getAccess().toString() });\n        } else {\n          console.error('Error:', err);\n        }\n      });\n    };\n\n    if (selectedFile) {\n      reader.readAsArrayBuffer(selectedFile);\n    } else {\n      console.error('No file selected.');\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Client</h1>\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Enter text\"\n            value={this.state.inputText}\n            onChange={this.handleTextChange}\n          />\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={this.handleFileChange}\n          />\n          <button onClick={this.handleSendRequest}>Send Request</button>\n        </div>\n        <div>\n          <p>Response:</p>\n          <p>{this.state.responseText}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GrpcClient;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,YAAY,QAAQ,6BAA6B;AAC1D,SAASC,aAAa,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,MAAMC,UAAU,SAASL,SAAS,CAAC;EACjCM,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAQfC,gBAAgB,GAAIC,KAAK,IAAK;MAC5B,IAAI,CAACC,QAAQ,CAAC;QAAEC,SAAS,EAAEF,KAAK,CAACG,MAAM,CAACC;MAAM,CAAC,CAAC;IAClD,CAAC;IAAA,KAEDC,gBAAgB,GAAIL,KAAK,IAAK;MAC5B,IAAI,CAACC,QAAQ,CAAC;QAAEK,YAAY,EAAEN,KAAK,CAACG,MAAM,CAACI,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC;IACxD,CAAC;IAAA,KAEDC,iBAAiB,GAAG,MAAM;MACxB,MAAM;QAAEN,SAAS;QAAEI;MAAa,CAAC,GAAG,IAAI,CAACG,KAAK;MAE9C,MAAMC,MAAM,GAAG,IAAIlB,YAAY,CAAC,mBAAmB,EAAE,IAAI,EAAE,IAAI,CAAC;MAEhE,MAAMmB,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAG,MAAM;QACpB,MAAMC,UAAU,GAAG,IAAIC,UAAU,CAACJ,MAAM,CAACK,MAAM,CAAC;QAEhD,MAAMC,OAAO,GAAG,IAAIxB,aAAa,CAAC,CAAC;QACnCwB,OAAO,CAACC,KAAK,CAAChB,SAAS,CAAC;QACxBe,OAAO,CAACE,WAAW,CAACb,YAAY,CAACc,IAAI,CAAC;QACtCH,OAAO,CAACI,QAAQ,CAACP,UAAU,CAAC;QAE5BJ,MAAM,CAACY,WAAW,CAACL,OAAO,EAAE,CAAC,CAAC,EAAE,CAACM,GAAG,EAAEC,QAAQ,KAAK;UACjD,IAAI,CAACD,GAAG,EAAE;YACR,MAAME,YAAY,GAAGD,QAAQ,CAACE,SAAS,CAAC,CAAC;YACzCC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,YAAY,CAAC;YACtC,IAAI,CAACxB,QAAQ,CAAC;cAAEwB,YAAY,EAAED,QAAQ,CAACE,SAAS,CAAC,CAAC,CAACG,QAAQ,CAAC;YAAE,CAAC,CAAC;UAClE,CAAC,MAAM;YACLF,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEP,GAAG,CAAC;UAC9B;QACF,CAAC,CAAC;MACJ,CAAC;MAED,IAAIjB,YAAY,EAAE;QAChBK,MAAM,CAACoB,iBAAiB,CAACzB,YAAY,CAAC;MACxC,CAAC,MAAM;QACLqB,OAAO,CAACG,KAAK,CAAC,mBAAmB,CAAC;MACpC;IACF,CAAC;IA7CC,IAAI,CAACrB,KAAK,GAAG;MACXP,SAAS,EAAE,EAAE;MACbI,YAAY,EAAE,IAAI;MAClBmB,YAAY,EAAE;IAChB,CAAC;EACH;EA0CAO,MAAMA,CAAA,EAAG;IACP,oBACErC,OAAA;MAAAsC,QAAA,gBACEtC,OAAA;QAAAsC,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACf1C,OAAA;QAAAsC,QAAA,gBACEtC,OAAA;UACE2C,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,YAAY;UACxBnC,KAAK,EAAE,IAAI,CAACK,KAAK,CAACP,SAAU;UAC5BsC,QAAQ,EAAE,IAAI,CAACzC;QAAiB;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,eACF1C,OAAA;UACE2C,IAAI,EAAC,MAAM;UACXG,MAAM,EAAC,SAAS;UAChBD,QAAQ,EAAE,IAAI,CAACnC;QAAiB;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,eACF1C,OAAA;UAAQ+C,OAAO,EAAE,IAAI,CAAClC,iBAAkB;UAAAyB,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eACN1C,OAAA;QAAAsC,QAAA,gBACEtC,OAAA;UAAAsC,QAAA,EAAG;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAChB1C,OAAA;UAAAsC,QAAA,EAAI,IAAI,CAACxB,KAAK,CAACgB;QAAY;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACF;AAEA,eAAezC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}