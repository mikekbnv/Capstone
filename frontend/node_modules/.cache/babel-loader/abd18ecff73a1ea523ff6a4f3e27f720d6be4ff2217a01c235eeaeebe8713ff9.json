{"ast":null,"code":"// source: echo.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */ // GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */ // @ts-nocheck\nvar jspb=require('google-protobuf');var goog=jspb;var global=function(){return this||window||global||self||Function('return this')();}.call(null);goog.exportSymbol('proto.access.DeleteEmployeeRequest',null,global);goog.exportSymbol('proto.access.Employee',null,global);goog.exportSymbol('proto.access.EmployeeRequest',null,global);goog.exportSymbol('proto.access.EmployeeResponse',null,global);goog.exportSymbol('proto.access.EmptyRequest',null,global);goog.exportSymbol('proto.access.EmptyResponse',null,global);goog.exportSymbol('proto.access.EntranceRequest',null,global);goog.exportSymbol('proto.access.ExitRequest',null,global);goog.exportSymbol('proto.access.ListEmployeesResponse',null,global);goog.exportSymbol('proto.access.Response',null,global);/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */proto.access.EntranceRequest=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null);};goog.inherits(proto.access.EntranceRequest,jspb.Message);if(goog.DEBUG&&!COMPILED){/**\n   * @public\n   * @override\n   */proto.access.EntranceRequest.displayName='proto.access.EntranceRequest';}/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */proto.access.ExitRequest=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null);};goog.inherits(proto.access.ExitRequest,jspb.Message);if(goog.DEBUG&&!COMPILED){/**\n   * @public\n   * @override\n   */proto.access.ExitRequest.displayName='proto.access.ExitRequest';}/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */proto.access.Response=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null);};goog.inherits(proto.access.Response,jspb.Message);if(goog.DEBUG&&!COMPILED){/**\n   * @public\n   * @override\n   */proto.access.Response.displayName='proto.access.Response';}/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */proto.access.Employee=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null);};goog.inherits(proto.access.Employee,jspb.Message);if(goog.DEBUG&&!COMPILED){/**\n   * @public\n   * @override\n   */proto.access.Employee.displayName='proto.access.Employee';}/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */proto.access.EmployeeRequest=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null);};goog.inherits(proto.access.EmployeeRequest,jspb.Message);if(goog.DEBUG&&!COMPILED){/**\n   * @public\n   * @override\n   */proto.access.EmployeeRequest.displayName='proto.access.EmployeeRequest';}/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */proto.access.EmployeeResponse=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null);};goog.inherits(proto.access.EmployeeResponse,jspb.Message);if(goog.DEBUG&&!COMPILED){/**\n   * @public\n   * @override\n   */proto.access.EmployeeResponse.displayName='proto.access.EmployeeResponse';}/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */proto.access.ListEmployeesResponse=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,proto.access.ListEmployeesResponse.repeatedFields_,null);};goog.inherits(proto.access.ListEmployeesResponse,jspb.Message);if(goog.DEBUG&&!COMPILED){/**\n   * @public\n   * @override\n   */proto.access.ListEmployeesResponse.displayName='proto.access.ListEmployeesResponse';}/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */proto.access.DeleteEmployeeRequest=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null);};goog.inherits(proto.access.DeleteEmployeeRequest,jspb.Message);if(goog.DEBUG&&!COMPILED){/**\n   * @public\n   * @override\n   */proto.access.DeleteEmployeeRequest.displayName='proto.access.DeleteEmployeeRequest';}/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */proto.access.EmptyResponse=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null);};goog.inherits(proto.access.EmptyResponse,jspb.Message);if(goog.DEBUG&&!COMPILED){/**\n   * @public\n   * @override\n   */proto.access.EmptyResponse.displayName='proto.access.EmptyResponse';}/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */proto.access.EmptyRequest=function(opt_data){jspb.Message.initialize(this,opt_data,0,-1,null,null);};goog.inherits(proto.access.EmptyRequest,jspb.Message);if(goog.DEBUG&&!COMPILED){/**\n   * @public\n   * @override\n   */proto.access.EmptyRequest.displayName='proto.access.EmptyRequest';}if(jspb.Message.GENERATE_TO_OBJECT){/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */proto.access.EntranceRequest.prototype.toObject=function(opt_includeInstance){return proto.access.EntranceRequest.toObject(opt_includeInstance,this);};/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.access.EntranceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */proto.access.EntranceRequest.toObject=function(includeInstance,msg){var f,obj={id:jspb.Message.getFieldWithDefault(msg,1,0),fileName:jspb.Message.getFieldWithDefault(msg,2,\"\"),chunk:msg.getChunk_asB64()};if(includeInstance){obj.$jspbMessageInstance=msg;}return obj;};}/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.access.EntranceRequest}\n */proto.access.EntranceRequest.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.access.EntranceRequest();return proto.access.EntranceRequest.deserializeBinaryFromReader(msg,reader);};/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.access.EntranceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.access.EntranceRequest}\n */proto.access.EntranceRequest.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break;}var field=reader.getFieldNumber();switch(field){case 1:var value=/** @type {number} */reader.readInt32();msg.setId(value);break;case 2:var value=/** @type {string} */reader.readString();msg.setFileName(value);break;case 3:var value=/** @type {!Uint8Array} */reader.readBytes();msg.setChunk(value);break;default:reader.skipField();break;}}return msg;};/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */proto.access.EntranceRequest.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter();proto.access.EntranceRequest.serializeBinaryToWriter(this,writer);return writer.getResultBuffer();};/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.access.EntranceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */proto.access.EntranceRequest.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getId();if(f!==0){writer.writeInt32(1,f);}f=message.getFileName();if(f.length>0){writer.writeString(2,f);}f=message.getChunk_asU8();if(f.length>0){writer.writeBytes(3,f);}};/**\n * optional int32 id = 1;\n * @return {number}\n */proto.access.EntranceRequest.prototype.getId=function(){return(/** @type {number} */jspb.Message.getFieldWithDefault(this,1,0));};/**\n * @param {number} value\n * @return {!proto.access.EntranceRequest} returns this\n */proto.access.EntranceRequest.prototype.setId=function(value){return jspb.Message.setProto3IntField(this,1,value);};/**\n * optional string file_name = 2;\n * @return {string}\n */proto.access.EntranceRequest.prototype.getFileName=function(){return(/** @type {string} */jspb.Message.getFieldWithDefault(this,2,\"\"));};/**\n * @param {string} value\n * @return {!proto.access.EntranceRequest} returns this\n */proto.access.EntranceRequest.prototype.setFileName=function(value){return jspb.Message.setProto3StringField(this,2,value);};/**\n * optional bytes chunk = 3;\n * @return {string}\n */proto.access.EntranceRequest.prototype.getChunk=function(){return(/** @type {string} */jspb.Message.getFieldWithDefault(this,3,\"\"));};/**\n * optional bytes chunk = 3;\n * This is a type-conversion wrapper around `getChunk()`\n * @return {string}\n */proto.access.EntranceRequest.prototype.getChunk_asB64=function(){return(/** @type {string} */jspb.Message.bytesAsB64(this.getChunk()));};/**\n * optional bytes chunk = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChunk()`\n * @return {!Uint8Array}\n */proto.access.EntranceRequest.prototype.getChunk_asU8=function(){return(/** @type {!Uint8Array} */jspb.Message.bytesAsU8(this.getChunk()));};/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.access.EntranceRequest} returns this\n */proto.access.EntranceRequest.prototype.setChunk=function(value){return jspb.Message.setProto3BytesField(this,3,value);};if(jspb.Message.GENERATE_TO_OBJECT){/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */proto.access.ExitRequest.prototype.toObject=function(opt_includeInstance){return proto.access.ExitRequest.toObject(opt_includeInstance,this);};/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.access.ExitRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */proto.access.ExitRequest.toObject=function(includeInstance,msg){var f,obj={id:jspb.Message.getFieldWithDefault(msg,1,0)};if(includeInstance){obj.$jspbMessageInstance=msg;}return obj;};}/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.access.ExitRequest}\n */proto.access.ExitRequest.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.access.ExitRequest();return proto.access.ExitRequest.deserializeBinaryFromReader(msg,reader);};/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.access.ExitRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.access.ExitRequest}\n */proto.access.ExitRequest.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break;}var field=reader.getFieldNumber();switch(field){case 1:var value=/** @type {number} */reader.readInt32();msg.setId(value);break;default:reader.skipField();break;}}return msg;};/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */proto.access.ExitRequest.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter();proto.access.ExitRequest.serializeBinaryToWriter(this,writer);return writer.getResultBuffer();};/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.access.ExitRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */proto.access.ExitRequest.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getId();if(f!==0){writer.writeInt32(1,f);}};/**\n * optional int32 id = 1;\n * @return {number}\n */proto.access.ExitRequest.prototype.getId=function(){return(/** @type {number} */jspb.Message.getFieldWithDefault(this,1,0));};/**\n * @param {number} value\n * @return {!proto.access.ExitRequest} returns this\n */proto.access.ExitRequest.prototype.setId=function(value){return jspb.Message.setProto3IntField(this,1,value);};if(jspb.Message.GENERATE_TO_OBJECT){/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */proto.access.Response.prototype.toObject=function(opt_includeInstance){return proto.access.Response.toObject(opt_includeInstance,this);};/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.access.Response} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */proto.access.Response.toObject=function(includeInstance,msg){var f,obj={access:jspb.Message.getBooleanFieldWithDefault(msg,1,false)};if(includeInstance){obj.$jspbMessageInstance=msg;}return obj;};}/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.access.Response}\n */proto.access.Response.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.access.Response();return proto.access.Response.deserializeBinaryFromReader(msg,reader);};/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.access.Response} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.access.Response}\n */proto.access.Response.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break;}var field=reader.getFieldNumber();switch(field){case 1:var value=/** @type {boolean} */reader.readBool();msg.setAccess(value);break;default:reader.skipField();break;}}return msg;};/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */proto.access.Response.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter();proto.access.Response.serializeBinaryToWriter(this,writer);return writer.getResultBuffer();};/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.access.Response} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */proto.access.Response.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getAccess();if(f){writer.writeBool(1,f);}};/**\n * optional bool access = 1;\n * @return {boolean}\n */proto.access.Response.prototype.getAccess=function(){return(/** @type {boolean} */jspb.Message.getBooleanFieldWithDefault(this,1,false));};/**\n * @param {boolean} value\n * @return {!proto.access.Response} returns this\n */proto.access.Response.prototype.setAccess=function(value){return jspb.Message.setProto3BooleanField(this,1,value);};if(jspb.Message.GENERATE_TO_OBJECT){/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */proto.access.Employee.prototype.toObject=function(opt_includeInstance){return proto.access.Employee.toObject(opt_includeInstance,this);};/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.access.Employee} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */proto.access.Employee.toObject=function(includeInstance,msg){var f,obj={id:jspb.Message.getFieldWithDefault(msg,1,0),fname:jspb.Message.getFieldWithDefault(msg,2,\"\"),lname:jspb.Message.getFieldWithDefault(msg,3,\"\"),position:jspb.Message.getFieldWithDefault(msg,4,\"\"),photo:msg.getPhoto_asB64()};if(includeInstance){obj.$jspbMessageInstance=msg;}return obj;};}/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.access.Employee}\n */proto.access.Employee.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.access.Employee();return proto.access.Employee.deserializeBinaryFromReader(msg,reader);};/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.access.Employee} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.access.Employee}\n */proto.access.Employee.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break;}var field=reader.getFieldNumber();switch(field){case 1:var value=/** @type {number} */reader.readInt32();msg.setId(value);break;case 2:var value=/** @type {string} */reader.readString();msg.setFname(value);break;case 3:var value=/** @type {string} */reader.readString();msg.setLname(value);break;case 4:var value=/** @type {string} */reader.readString();msg.setPosition(value);break;case 5:var value=/** @type {!Uint8Array} */reader.readBytes();msg.setPhoto(value);break;default:reader.skipField();break;}}return msg;};/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */proto.access.Employee.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter();proto.access.Employee.serializeBinaryToWriter(this,writer);return writer.getResultBuffer();};/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.access.Employee} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */proto.access.Employee.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getId();if(f!==0){writer.writeInt32(1,f);}f=message.getFname();if(f.length>0){writer.writeString(2,f);}f=message.getLname();if(f.length>0){writer.writeString(3,f);}f=message.getPosition();if(f.length>0){writer.writeString(4,f);}f=message.getPhoto_asU8();if(f.length>0){writer.writeBytes(5,f);}};/**\n * optional int32 id = 1;\n * @return {number}\n */proto.access.Employee.prototype.getId=function(){return(/** @type {number} */jspb.Message.getFieldWithDefault(this,1,0));};/**\n * @param {number} value\n * @return {!proto.access.Employee} returns this\n */proto.access.Employee.prototype.setId=function(value){return jspb.Message.setProto3IntField(this,1,value);};/**\n * optional string fname = 2;\n * @return {string}\n */proto.access.Employee.prototype.getFname=function(){return(/** @type {string} */jspb.Message.getFieldWithDefault(this,2,\"\"));};/**\n * @param {string} value\n * @return {!proto.access.Employee} returns this\n */proto.access.Employee.prototype.setFname=function(value){return jspb.Message.setProto3StringField(this,2,value);};/**\n * optional string lname = 3;\n * @return {string}\n */proto.access.Employee.prototype.getLname=function(){return(/** @type {string} */jspb.Message.getFieldWithDefault(this,3,\"\"));};/**\n * @param {string} value\n * @return {!proto.access.Employee} returns this\n */proto.access.Employee.prototype.setLname=function(value){return jspb.Message.setProto3StringField(this,3,value);};/**\n * optional string position = 4;\n * @return {string}\n */proto.access.Employee.prototype.getPosition=function(){return(/** @type {string} */jspb.Message.getFieldWithDefault(this,4,\"\"));};/**\n * @param {string} value\n * @return {!proto.access.Employee} returns this\n */proto.access.Employee.prototype.setPosition=function(value){return jspb.Message.setProto3StringField(this,4,value);};/**\n * optional bytes photo = 5;\n * @return {string}\n */proto.access.Employee.prototype.getPhoto=function(){return(/** @type {string} */jspb.Message.getFieldWithDefault(this,5,\"\"));};/**\n * optional bytes photo = 5;\n * This is a type-conversion wrapper around `getPhoto()`\n * @return {string}\n */proto.access.Employee.prototype.getPhoto_asB64=function(){return(/** @type {string} */jspb.Message.bytesAsB64(this.getPhoto()));};/**\n * optional bytes photo = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPhoto()`\n * @return {!Uint8Array}\n */proto.access.Employee.prototype.getPhoto_asU8=function(){return(/** @type {!Uint8Array} */jspb.Message.bytesAsU8(this.getPhoto()));};/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.access.Employee} returns this\n */proto.access.Employee.prototype.setPhoto=function(value){return jspb.Message.setProto3BytesField(this,5,value);};if(jspb.Message.GENERATE_TO_OBJECT){/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */proto.access.EmployeeRequest.prototype.toObject=function(opt_includeInstance){return proto.access.EmployeeRequest.toObject(opt_includeInstance,this);};/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.access.EmployeeRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */proto.access.EmployeeRequest.toObject=function(includeInstance,msg){var f,obj={employee:(f=msg.getEmployee())&&proto.access.Employee.toObject(includeInstance,f)};if(includeInstance){obj.$jspbMessageInstance=msg;}return obj;};}/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.access.EmployeeRequest}\n */proto.access.EmployeeRequest.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.access.EmployeeRequest();return proto.access.EmployeeRequest.deserializeBinaryFromReader(msg,reader);};/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.access.EmployeeRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.access.EmployeeRequest}\n */proto.access.EmployeeRequest.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break;}var field=reader.getFieldNumber();switch(field){case 1:var value=new proto.access.Employee();reader.readMessage(value,proto.access.Employee.deserializeBinaryFromReader);msg.setEmployee(value);break;default:reader.skipField();break;}}return msg;};/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */proto.access.EmployeeRequest.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter();proto.access.EmployeeRequest.serializeBinaryToWriter(this,writer);return writer.getResultBuffer();};/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.access.EmployeeRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */proto.access.EmployeeRequest.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getEmployee();if(f!=null){writer.writeMessage(1,f,proto.access.Employee.serializeBinaryToWriter);}};/**\n * optional Employee employee = 1;\n * @return {?proto.access.Employee}\n */proto.access.EmployeeRequest.prototype.getEmployee=function(){return(/** @type{?proto.access.Employee} */jspb.Message.getWrapperField(this,proto.access.Employee,1));};/**\n * @param {?proto.access.Employee|undefined} value\n * @return {!proto.access.EmployeeRequest} returns this\n*/proto.access.EmployeeRequest.prototype.setEmployee=function(value){return jspb.Message.setWrapperField(this,1,value);};/**\n * Clears the message field making it undefined.\n * @return {!proto.access.EmployeeRequest} returns this\n */proto.access.EmployeeRequest.prototype.clearEmployee=function(){return this.setEmployee(undefined);};/**\n * Returns whether this field is set.\n * @return {boolean}\n */proto.access.EmployeeRequest.prototype.hasEmployee=function(){return jspb.Message.getField(this,1)!=null;};if(jspb.Message.GENERATE_TO_OBJECT){/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */proto.access.EmployeeResponse.prototype.toObject=function(opt_includeInstance){return proto.access.EmployeeResponse.toObject(opt_includeInstance,this);};/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.access.EmployeeResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */proto.access.EmployeeResponse.toObject=function(includeInstance,msg){var f,obj={id:jspb.Message.getFieldWithDefault(msg,1,0)};if(includeInstance){obj.$jspbMessageInstance=msg;}return obj;};}/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.access.EmployeeResponse}\n */proto.access.EmployeeResponse.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.access.EmployeeResponse();return proto.access.EmployeeResponse.deserializeBinaryFromReader(msg,reader);};/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.access.EmployeeResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.access.EmployeeResponse}\n */proto.access.EmployeeResponse.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break;}var field=reader.getFieldNumber();switch(field){case 1:var value=/** @type {number} */reader.readInt32();msg.setId(value);break;default:reader.skipField();break;}}return msg;};/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */proto.access.EmployeeResponse.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter();proto.access.EmployeeResponse.serializeBinaryToWriter(this,writer);return writer.getResultBuffer();};/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.access.EmployeeResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */proto.access.EmployeeResponse.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getId();if(f!==0){writer.writeInt32(1,f);}};/**\n * optional int32 id = 1;\n * @return {number}\n */proto.access.EmployeeResponse.prototype.getId=function(){return(/** @type {number} */jspb.Message.getFieldWithDefault(this,1,0));};/**\n * @param {number} value\n * @return {!proto.access.EmployeeResponse} returns this\n */proto.access.EmployeeResponse.prototype.setId=function(value){return jspb.Message.setProto3IntField(this,1,value);};/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */proto.access.ListEmployeesResponse.repeatedFields_=[1];if(jspb.Message.GENERATE_TO_OBJECT){/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */proto.access.ListEmployeesResponse.prototype.toObject=function(opt_includeInstance){return proto.access.ListEmployeesResponse.toObject(opt_includeInstance,this);};/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.access.ListEmployeesResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */proto.access.ListEmployeesResponse.toObject=function(includeInstance,msg){var f,obj={employeesList:jspb.Message.toObjectList(msg.getEmployeesList(),proto.access.Employee.toObject,includeInstance)};if(includeInstance){obj.$jspbMessageInstance=msg;}return obj;};}/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.access.ListEmployeesResponse}\n */proto.access.ListEmployeesResponse.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.access.ListEmployeesResponse();return proto.access.ListEmployeesResponse.deserializeBinaryFromReader(msg,reader);};/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.access.ListEmployeesResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.access.ListEmployeesResponse}\n */proto.access.ListEmployeesResponse.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break;}var field=reader.getFieldNumber();switch(field){case 1:var value=new proto.access.Employee();reader.readMessage(value,proto.access.Employee.deserializeBinaryFromReader);msg.addEmployees(value);break;default:reader.skipField();break;}}return msg;};/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */proto.access.ListEmployeesResponse.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter();proto.access.ListEmployeesResponse.serializeBinaryToWriter(this,writer);return writer.getResultBuffer();};/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.access.ListEmployeesResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */proto.access.ListEmployeesResponse.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getEmployeesList();if(f.length>0){writer.writeRepeatedMessage(1,f,proto.access.Employee.serializeBinaryToWriter);}};/**\n * repeated Employee employees = 1;\n * @return {!Array<!proto.access.Employee>}\n */proto.access.ListEmployeesResponse.prototype.getEmployeesList=function(){return(/** @type{!Array<!proto.access.Employee>} */jspb.Message.getRepeatedWrapperField(this,proto.access.Employee,1));};/**\n * @param {!Array<!proto.access.Employee>} value\n * @return {!proto.access.ListEmployeesResponse} returns this\n*/proto.access.ListEmployeesResponse.prototype.setEmployeesList=function(value){return jspb.Message.setRepeatedWrapperField(this,1,value);};/**\n * @param {!proto.access.Employee=} opt_value\n * @param {number=} opt_index\n * @return {!proto.access.Employee}\n */proto.access.ListEmployeesResponse.prototype.addEmployees=function(opt_value,opt_index){return jspb.Message.addToRepeatedWrapperField(this,1,opt_value,proto.access.Employee,opt_index);};/**\n * Clears the list making it empty but non-null.\n * @return {!proto.access.ListEmployeesResponse} returns this\n */proto.access.ListEmployeesResponse.prototype.clearEmployeesList=function(){return this.setEmployeesList([]);};if(jspb.Message.GENERATE_TO_OBJECT){/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */proto.access.DeleteEmployeeRequest.prototype.toObject=function(opt_includeInstance){return proto.access.DeleteEmployeeRequest.toObject(opt_includeInstance,this);};/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.access.DeleteEmployeeRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */proto.access.DeleteEmployeeRequest.toObject=function(includeInstance,msg){var f,obj={id:jspb.Message.getFieldWithDefault(msg,1,0)};if(includeInstance){obj.$jspbMessageInstance=msg;}return obj;};}/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.access.DeleteEmployeeRequest}\n */proto.access.DeleteEmployeeRequest.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.access.DeleteEmployeeRequest();return proto.access.DeleteEmployeeRequest.deserializeBinaryFromReader(msg,reader);};/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.access.DeleteEmployeeRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.access.DeleteEmployeeRequest}\n */proto.access.DeleteEmployeeRequest.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break;}var field=reader.getFieldNumber();switch(field){case 1:var value=/** @type {number} */reader.readInt32();msg.setId(value);break;default:reader.skipField();break;}}return msg;};/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */proto.access.DeleteEmployeeRequest.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter();proto.access.DeleteEmployeeRequest.serializeBinaryToWriter(this,writer);return writer.getResultBuffer();};/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.access.DeleteEmployeeRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */proto.access.DeleteEmployeeRequest.serializeBinaryToWriter=function(message,writer){var f=undefined;f=message.getId();if(f!==0){writer.writeInt32(1,f);}};/**\n * optional int32 id = 1;\n * @return {number}\n */proto.access.DeleteEmployeeRequest.prototype.getId=function(){return(/** @type {number} */jspb.Message.getFieldWithDefault(this,1,0));};/**\n * @param {number} value\n * @return {!proto.access.DeleteEmployeeRequest} returns this\n */proto.access.DeleteEmployeeRequest.prototype.setId=function(value){return jspb.Message.setProto3IntField(this,1,value);};if(jspb.Message.GENERATE_TO_OBJECT){/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */proto.access.EmptyResponse.prototype.toObject=function(opt_includeInstance){return proto.access.EmptyResponse.toObject(opt_includeInstance,this);};/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.access.EmptyResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */proto.access.EmptyResponse.toObject=function(includeInstance,msg){var f,obj={};if(includeInstance){obj.$jspbMessageInstance=msg;}return obj;};}/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.access.EmptyResponse}\n */proto.access.EmptyResponse.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.access.EmptyResponse();return proto.access.EmptyResponse.deserializeBinaryFromReader(msg,reader);};/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.access.EmptyResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.access.EmptyResponse}\n */proto.access.EmptyResponse.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break;}var field=reader.getFieldNumber();switch(field){default:reader.skipField();break;}}return msg;};/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */proto.access.EmptyResponse.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter();proto.access.EmptyResponse.serializeBinaryToWriter(this,writer);return writer.getResultBuffer();};/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.access.EmptyResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */proto.access.EmptyResponse.serializeBinaryToWriter=function(message,writer){var f=undefined;};if(jspb.Message.GENERATE_TO_OBJECT){/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */proto.access.EmptyRequest.prototype.toObject=function(opt_includeInstance){return proto.access.EmptyRequest.toObject(opt_includeInstance,this);};/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.access.EmptyRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */proto.access.EmptyRequest.toObject=function(includeInstance,msg){var f,obj={};if(includeInstance){obj.$jspbMessageInstance=msg;}return obj;};}/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.access.EmptyRequest}\n */proto.access.EmptyRequest.deserializeBinary=function(bytes){var reader=new jspb.BinaryReader(bytes);var msg=new proto.access.EmptyRequest();return proto.access.EmptyRequest.deserializeBinaryFromReader(msg,reader);};/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.access.EmptyRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.access.EmptyRequest}\n */proto.access.EmptyRequest.deserializeBinaryFromReader=function(msg,reader){while(reader.nextField()){if(reader.isEndGroup()){break;}var field=reader.getFieldNumber();switch(field){default:reader.skipField();break;}}return msg;};/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */proto.access.EmptyRequest.prototype.serializeBinary=function(){var writer=new jspb.BinaryWriter();proto.access.EmptyRequest.serializeBinaryToWriter(this,writer);return writer.getResultBuffer();};/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.access.EmptyRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */proto.access.EmptyRequest.serializeBinaryToWriter=function(message,writer){var f=undefined;};goog.object.extend(exports,proto.access);","map":{"version":3,"names":["jspb","require","goog","global","window","self","Function","call","exportSymbol","proto","access","EntranceRequest","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","ExitRequest","Response","Employee","EmployeeRequest","EmployeeResponse","ListEmployeesResponse","repeatedFields_","DeleteEmployeeRequest","EmptyResponse","EmptyRequest","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","id","getFieldWithDefault","fileName","chunk","getChunk_asB64","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readInt32","setId","readString","setFileName","readBytes","setChunk","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getId","writeInt32","getFileName","length","writeString","getChunk_asU8","writeBytes","setProto3IntField","setProto3StringField","getChunk","bytesAsB64","bytesAsU8","setProto3BytesField","getBooleanFieldWithDefault","readBool","setAccess","getAccess","writeBool","setProto3BooleanField","fname","lname","position","photo","getPhoto_asB64","setFname","setLname","setPosition","setPhoto","getFname","getLname","getPosition","getPhoto_asU8","getPhoto","employee","getEmployee","readMessage","setEmployee","writeMessage","getWrapperField","setWrapperField","clearEmployee","hasEmployee","getField","employeesList","toObjectList","getEmployeesList","addEmployees","writeRepeatedMessage","getRepeatedWrapperField","setEmployeesList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearEmployeesList","object","extend","exports"],"sources":["/Users/mkkbnv/go/src/grpc-react-web/frontend/src/jsclient/echo_pb.js"],"sourcesContent":["// source: echo.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = (function() { return this || window || global || self || Function('return this')(); }).call(null);\n\ngoog.exportSymbol('proto.access.DeleteEmployeeRequest', null, global);\ngoog.exportSymbol('proto.access.Employee', null, global);\ngoog.exportSymbol('proto.access.EmployeeRequest', null, global);\ngoog.exportSymbol('proto.access.EmployeeResponse', null, global);\ngoog.exportSymbol('proto.access.EmptyRequest', null, global);\ngoog.exportSymbol('proto.access.EmptyResponse', null, global);\ngoog.exportSymbol('proto.access.EntranceRequest', null, global);\ngoog.exportSymbol('proto.access.ExitRequest', null, global);\ngoog.exportSymbol('proto.access.ListEmployeesResponse', null, global);\ngoog.exportSymbol('proto.access.Response', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.access.EntranceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.access.EntranceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.access.EntranceRequest.displayName = 'proto.access.EntranceRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.access.ExitRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.access.ExitRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.access.ExitRequest.displayName = 'proto.access.ExitRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.access.Response = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.access.Response, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.access.Response.displayName = 'proto.access.Response';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.access.Employee = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.access.Employee, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.access.Employee.displayName = 'proto.access.Employee';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.access.EmployeeRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.access.EmployeeRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.access.EmployeeRequest.displayName = 'proto.access.EmployeeRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.access.EmployeeResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.access.EmployeeResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.access.EmployeeResponse.displayName = 'proto.access.EmployeeResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.access.ListEmployeesResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.access.ListEmployeesResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.access.ListEmployeesResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.access.ListEmployeesResponse.displayName = 'proto.access.ListEmployeesResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.access.DeleteEmployeeRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.access.DeleteEmployeeRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.access.DeleteEmployeeRequest.displayName = 'proto.access.DeleteEmployeeRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.access.EmptyResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.access.EmptyResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.access.EmptyResponse.displayName = 'proto.access.EmptyResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.access.EmptyRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.access.EmptyRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.access.EmptyRequest.displayName = 'proto.access.EmptyRequest';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.access.EntranceRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.access.EntranceRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.access.EntranceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.access.EntranceRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    fileName: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    chunk: msg.getChunk_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.access.EntranceRequest}\n */\nproto.access.EntranceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.access.EntranceRequest;\n  return proto.access.EntranceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.access.EntranceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.access.EntranceRequest}\n */\nproto.access.EntranceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFileName(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setChunk(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.access.EntranceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.access.EntranceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.access.EntranceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.access.EntranceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getFileName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getChunk_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.access.EntranceRequest.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.access.EntranceRequest} returns this\n */\nproto.access.EntranceRequest.prototype.setId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string file_name = 2;\n * @return {string}\n */\nproto.access.EntranceRequest.prototype.getFileName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.access.EntranceRequest} returns this\n */\nproto.access.EntranceRequest.prototype.setFileName = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional bytes chunk = 3;\n * @return {string}\n */\nproto.access.EntranceRequest.prototype.getChunk = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes chunk = 3;\n * This is a type-conversion wrapper around `getChunk()`\n * @return {string}\n */\nproto.access.EntranceRequest.prototype.getChunk_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getChunk()));\n};\n\n\n/**\n * optional bytes chunk = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChunk()`\n * @return {!Uint8Array}\n */\nproto.access.EntranceRequest.prototype.getChunk_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getChunk()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.access.EntranceRequest} returns this\n */\nproto.access.EntranceRequest.prototype.setChunk = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.access.ExitRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.access.ExitRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.access.ExitRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.access.ExitRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.access.ExitRequest}\n */\nproto.access.ExitRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.access.ExitRequest;\n  return proto.access.ExitRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.access.ExitRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.access.ExitRequest}\n */\nproto.access.ExitRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.access.ExitRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.access.ExitRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.access.ExitRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.access.ExitRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.access.ExitRequest.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.access.ExitRequest} returns this\n */\nproto.access.ExitRequest.prototype.setId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.access.Response.prototype.toObject = function(opt_includeInstance) {\n  return proto.access.Response.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.access.Response} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.access.Response.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    access: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.access.Response}\n */\nproto.access.Response.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.access.Response;\n  return proto.access.Response.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.access.Response} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.access.Response}\n */\nproto.access.Response.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAccess(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.access.Response.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.access.Response.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.access.Response} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.access.Response.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAccess();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool access = 1;\n * @return {boolean}\n */\nproto.access.Response.prototype.getAccess = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.access.Response} returns this\n */\nproto.access.Response.prototype.setAccess = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.access.Employee.prototype.toObject = function(opt_includeInstance) {\n  return proto.access.Employee.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.access.Employee} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.access.Employee.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    fname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    lname: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    position: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    photo: msg.getPhoto_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.access.Employee}\n */\nproto.access.Employee.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.access.Employee;\n  return proto.access.Employee.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.access.Employee} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.access.Employee}\n */\nproto.access.Employee.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFname(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLname(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPosition(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPhoto(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.access.Employee.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.access.Employee.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.access.Employee} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.access.Employee.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getFname();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getLname();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getPosition();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getPhoto_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.access.Employee.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.access.Employee} returns this\n */\nproto.access.Employee.prototype.setId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string fname = 2;\n * @return {string}\n */\nproto.access.Employee.prototype.getFname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.access.Employee} returns this\n */\nproto.access.Employee.prototype.setFname = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string lname = 3;\n * @return {string}\n */\nproto.access.Employee.prototype.getLname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.access.Employee} returns this\n */\nproto.access.Employee.prototype.setLname = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string position = 4;\n * @return {string}\n */\nproto.access.Employee.prototype.getPosition = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.access.Employee} returns this\n */\nproto.access.Employee.prototype.setPosition = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional bytes photo = 5;\n * @return {string}\n */\nproto.access.Employee.prototype.getPhoto = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes photo = 5;\n * This is a type-conversion wrapper around `getPhoto()`\n * @return {string}\n */\nproto.access.Employee.prototype.getPhoto_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPhoto()));\n};\n\n\n/**\n * optional bytes photo = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPhoto()`\n * @return {!Uint8Array}\n */\nproto.access.Employee.prototype.getPhoto_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPhoto()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.access.Employee} returns this\n */\nproto.access.Employee.prototype.setPhoto = function(value) {\n  return jspb.Message.setProto3BytesField(this, 5, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.access.EmployeeRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.access.EmployeeRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.access.EmployeeRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.access.EmployeeRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    employee: (f = msg.getEmployee()) && proto.access.Employee.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.access.EmployeeRequest}\n */\nproto.access.EmployeeRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.access.EmployeeRequest;\n  return proto.access.EmployeeRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.access.EmployeeRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.access.EmployeeRequest}\n */\nproto.access.EmployeeRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.access.Employee;\n      reader.readMessage(value,proto.access.Employee.deserializeBinaryFromReader);\n      msg.setEmployee(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.access.EmployeeRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.access.EmployeeRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.access.EmployeeRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.access.EmployeeRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEmployee();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.access.Employee.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Employee employee = 1;\n * @return {?proto.access.Employee}\n */\nproto.access.EmployeeRequest.prototype.getEmployee = function() {\n  return /** @type{?proto.access.Employee} */ (\n    jspb.Message.getWrapperField(this, proto.access.Employee, 1));\n};\n\n\n/**\n * @param {?proto.access.Employee|undefined} value\n * @return {!proto.access.EmployeeRequest} returns this\n*/\nproto.access.EmployeeRequest.prototype.setEmployee = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.access.EmployeeRequest} returns this\n */\nproto.access.EmployeeRequest.prototype.clearEmployee = function() {\n  return this.setEmployee(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.access.EmployeeRequest.prototype.hasEmployee = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.access.EmployeeResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.access.EmployeeResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.access.EmployeeResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.access.EmployeeResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.access.EmployeeResponse}\n */\nproto.access.EmployeeResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.access.EmployeeResponse;\n  return proto.access.EmployeeResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.access.EmployeeResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.access.EmployeeResponse}\n */\nproto.access.EmployeeResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.access.EmployeeResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.access.EmployeeResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.access.EmployeeResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.access.EmployeeResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.access.EmployeeResponse.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.access.EmployeeResponse} returns this\n */\nproto.access.EmployeeResponse.prototype.setId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.access.ListEmployeesResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.access.ListEmployeesResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.access.ListEmployeesResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.access.ListEmployeesResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.access.ListEmployeesResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    employeesList: jspb.Message.toObjectList(msg.getEmployeesList(),\n    proto.access.Employee.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.access.ListEmployeesResponse}\n */\nproto.access.ListEmployeesResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.access.ListEmployeesResponse;\n  return proto.access.ListEmployeesResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.access.ListEmployeesResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.access.ListEmployeesResponse}\n */\nproto.access.ListEmployeesResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.access.Employee;\n      reader.readMessage(value,proto.access.Employee.deserializeBinaryFromReader);\n      msg.addEmployees(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.access.ListEmployeesResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.access.ListEmployeesResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.access.ListEmployeesResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.access.ListEmployeesResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEmployeesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.access.Employee.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Employee employees = 1;\n * @return {!Array<!proto.access.Employee>}\n */\nproto.access.ListEmployeesResponse.prototype.getEmployeesList = function() {\n  return /** @type{!Array<!proto.access.Employee>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.access.Employee, 1));\n};\n\n\n/**\n * @param {!Array<!proto.access.Employee>} value\n * @return {!proto.access.ListEmployeesResponse} returns this\n*/\nproto.access.ListEmployeesResponse.prototype.setEmployeesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.access.Employee=} opt_value\n * @param {number=} opt_index\n * @return {!proto.access.Employee}\n */\nproto.access.ListEmployeesResponse.prototype.addEmployees = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.access.Employee, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.access.ListEmployeesResponse} returns this\n */\nproto.access.ListEmployeesResponse.prototype.clearEmployeesList = function() {\n  return this.setEmployeesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.access.DeleteEmployeeRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.access.DeleteEmployeeRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.access.DeleteEmployeeRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.access.DeleteEmployeeRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.access.DeleteEmployeeRequest}\n */\nproto.access.DeleteEmployeeRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.access.DeleteEmployeeRequest;\n  return proto.access.DeleteEmployeeRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.access.DeleteEmployeeRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.access.DeleteEmployeeRequest}\n */\nproto.access.DeleteEmployeeRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.access.DeleteEmployeeRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.access.DeleteEmployeeRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.access.DeleteEmployeeRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.access.DeleteEmployeeRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.access.DeleteEmployeeRequest.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.access.DeleteEmployeeRequest} returns this\n */\nproto.access.DeleteEmployeeRequest.prototype.setId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.access.EmptyResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.access.EmptyResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.access.EmptyResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.access.EmptyResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.access.EmptyResponse}\n */\nproto.access.EmptyResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.access.EmptyResponse;\n  return proto.access.EmptyResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.access.EmptyResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.access.EmptyResponse}\n */\nproto.access.EmptyResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.access.EmptyResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.access.EmptyResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.access.EmptyResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.access.EmptyResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.access.EmptyRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.access.EmptyRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.access.EmptyRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.access.EmptyRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.access.EmptyRequest}\n */\nproto.access.EmptyRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.access.EmptyRequest;\n  return proto.access.EmptyRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.access.EmptyRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.access.EmptyRequest}\n */\nproto.access.EmptyRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.access.EmptyRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.access.EmptyRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.access.EmptyRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.access.EmptyRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\ngoog.object.extend(exports, proto.access);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}