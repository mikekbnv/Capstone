{"ast":null,"code":"var _jsxFileName = \"/Users/mkkbnv/go/src/grpc-react-web/frontend/src/pages/entrance.js\";\nimport React, { Component } from 'react';\nimport { AccessClient } from '../jsclient/echo_grpc_web_pb';\nimport { EntranceRequest } from '../jsclient/echo_pb';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Entrance extends Component {\n  constructor(props) {\n    super(props);\n    this.handleTextChange = event => {\n      this.setState({\n        inputText: event.target.value\n      });\n    };\n    this.startCamera = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        this.setState({\n          videoStream: stream\n        });\n        this.videoRef.current.srcObject = stream;\n      } catch (error) {\n        console.error('Error accessing camera:', error);\n      }\n    };\n    this.stopCamera = () => {\n      const {\n        videoStream\n      } = this.state;\n      if (videoStream) {\n        videoStream.getTracks().forEach(track => track.stop());\n        this.setState({\n          videoStream: null\n        });\n      }\n    };\n    this.handleSendRequest = () => {\n      const {\n        inputText\n      } = this.state;\n      const videoElement = this.videoRef.current;\n      if (videoElement) {\n        const canvas = document.createElement('canvas');\n        canvas.width = videoElement.videoWidth;\n        canvas.height = videoElement.videoHeight;\n        canvas.getContext('2d').drawImage(videoElement, 0, 0, canvas.width, canvas.height);\n        canvas.toBlob(blob => {\n          const reader = new FileReader();\n          reader.onload = () => {\n            const imageBytes = new Uint8Array(reader.result);\n            const client = new AccessClient('http://0.0.0.0:8080', null, null);\n            const request = new EntranceRequest();\n            request.setId(inputText);\n            request.setFileName('camera.jpg');\n            request.setChunk(imageBytes);\n            client.accessCheck(request, {}, (err, response) => {\n              if (!err) {\n                const responseText = response.getAccess();\n                console.log('Response:', responseText);\n                this.setState({\n                  responseText: responseText.toString()\n                });\n              } else {\n                console.error('Error:', err);\n              }\n            });\n          };\n          reader.readAsArrayBuffer(blob);\n        });\n      } else {\n        console.error('Camera not started.');\n      }\n    };\n    this.state = {\n      inputText: '',\n      videoStream: null,\n      responseText: ''\n    };\n    this.videoRef = /*#__PURE__*/React.createRef();\n  }\n  componentDidMount() {\n    this.startCamera();\n  }\n  componentWillUnmount() {\n    this.stopCamera();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Entrance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter ID\",\n          value: this.state.inputText,\n          onChange: this.handleTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleSendRequest,\n          children: \"Send Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Camera:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: this.videoRef,\n          autoPlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Response:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.responseText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Entrance;","map":{"version":3,"names":["React","Component","AccessClient","EntranceRequest","jsxDEV","_jsxDEV","Entrance","constructor","props","handleTextChange","event","setState","inputText","target","value","startCamera","stream","navigator","mediaDevices","getUserMedia","video","videoStream","videoRef","current","srcObject","error","console","stopCamera","state","getTracks","forEach","track","stop","handleSendRequest","videoElement","canvas","document","createElement","width","videoWidth","height","videoHeight","getContext","drawImage","toBlob","blob","reader","FileReader","onload","imageBytes","Uint8Array","result","client","request","setId","setFileName","setChunk","accessCheck","err","response","responseText","getAccess","log","toString","readAsArrayBuffer","createRef","componentDidMount","componentWillUnmount","render","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","ref","autoPlay"],"sources":["/Users/mkkbnv/go/src/grpc-react-web/frontend/src/pages/entrance.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { AccessClient } from '../jsclient/echo_grpc_web_pb';\nimport { EntranceRequest } from '../jsclient/echo_pb';\n\nclass Entrance extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputText: '',\n      videoStream: null,\n      responseText: '',\n    };\n    this.videoRef = React.createRef();\n  }\n\n  handleTextChange = (event) => {\n    this.setState({ inputText: event.target.value });\n  };\n\n  startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n      this.setState({ videoStream: stream });\n      this.videoRef.current.srcObject = stream;\n    } catch (error) {\n      console.error('Error accessing camera:', error);\n    }\n  };\n\n  stopCamera = () => {\n    const { videoStream } = this.state;\n    if (videoStream) {\n      videoStream.getTracks().forEach((track) => track.stop());\n      this.setState({ videoStream: null });\n    }\n  };\n\n  handleSendRequest = () => {\n    const { inputText } = this.state;\n    const videoElement = this.videoRef.current;\n\n    if (videoElement) {\n      const canvas = document.createElement('canvas');\n      canvas.width = videoElement.videoWidth;\n      canvas.height = videoElement.videoHeight;\n      canvas.getContext('2d').drawImage(videoElement, 0, 0, canvas.width, canvas.height);\n      canvas.toBlob((blob) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n          const imageBytes = new Uint8Array(reader.result);\n\n          const client = new AccessClient('http://0.0.0.0:8080', null, null);\n          const request = new EntranceRequest();\n          request.setId(inputText);\n          request.setFileName('camera.jpg');\n          request.setChunk(imageBytes);\n\n          client.accessCheck(request, {}, (err, response) => {\n            if (!err) {\n              const responseText = response.getAccess();\n              console.log('Response:', responseText);\n              this.setState({ responseText: responseText.toString() });\n            } else {\n              console.error('Error:', err);\n            }\n          });\n        };\n        reader.readAsArrayBuffer(blob);\n      });\n    } else {\n      console.error('Camera not started.');\n    }\n  };\n\n  componentDidMount() {\n    this.startCamera();\n  }\n\n  componentWillUnmount() {\n    this.stopCamera();\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Entrance</h1>\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Enter ID\"\n            value={this.state.inputText}\n            onChange={this.handleTextChange}\n          />\n          <button onClick={this.handleSendRequest}>Send Request</button>\n        </div>\n        <div>\n          <p>Camera:</p>\n          <video ref={this.videoRef} autoPlay />\n        </div>\n        <div>\n          <p>Response:</p>\n          <p>{this.state.responseText}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Entrance;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}