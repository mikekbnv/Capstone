{"ast":null,"code":"var _jsxFileName = \"/Users/mkkbnv/go/src/grpc-react-web/frontend/src/App.js\";\n// src/GrpcClient.js\nimport React, { Component } from 'react';\nimport { AccessClient } from './jsclient/echo_grpc_web_pb';\nimport { AccessRequest } from './jsclient/echo_pb';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass GrpcClient extends Component {\n  constructor(props) {\n    super(props);\n    this.handleTextChange = event => {\n      this.setState({\n        inputText: event.target.value\n      });\n    };\n    this.handleFileChange = event => {\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n    this.handleSendRequest = () => {\n      const {\n        inputText,\n        selectedFile\n      } = this.state;\n\n      // Create a gRPC client\n      const client = new AccessClient('http://localhost:8080', null, null);\n\n      // Read the selected image file as bytes\n      const reader = new FileReader();\n      reader.onload = () => {\n        const imageBytes = new Uint8Array(reader.result);\n\n        // Create an AccessRequest with id and image_data\n        const request = new AccessRequest();\n        request.setId(inputText);\n        request.setChunk(imageBytes);\n\n        // Send the AccessCheck request\n        client.accessCheck(request, {}, (err, response) => {\n          if (!err) {\n            const responseText = response.getAccess().toString();\n            console.log('Response:', responseText);\n            this.setState({\n              responseText: response.getAccess().toString()\n            });\n          } else {\n            console.error('Error:', err);\n          }\n        });\n      };\n\n      // if (selectedFile) {\n      //   reader.readAsArrayBuffer(selectedFile);\n      // } else {\n      //   console.error('No file selected.');\n      // }\n    };\n    this.state = {\n      inputText: '',\n      selectedFile: null,\n      responseText: ''\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"gRPC Client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter text\",\n          value: this.state.inputText,\n          onChange: this.handleTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: this.handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleSendRequest,\n          children: \"Send Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Response:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.responseText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default GrpcClient;","map":{"version":3,"names":["React","Component","AccessClient","AccessRequest","jsxDEV","_jsxDEV","GrpcClient","constructor","props","handleTextChange","event","setState","inputText","target","value","handleFileChange","selectedFile","files","handleSendRequest","state","client","reader","FileReader","onload","imageBytes","Uint8Array","result","request","setId","setChunk","accessCheck","err","response","responseText","getAccess","toString","console","log","error","render","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","accept","onClick"],"sources":["/Users/mkkbnv/go/src/grpc-react-web/frontend/src/App.js"],"sourcesContent":["// src/GrpcClient.js\nimport React, { Component } from 'react';\nimport { AccessClient } from './jsclient/echo_grpc_web_pb';\nimport { AccessRequest } from './jsclient/echo_pb';\n\n\nclass GrpcClient extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputText: '',\n      selectedFile: null,\n      responseText: '',\n    };\n  }\n\n  handleTextChange = (event) => {\n    this.setState({ inputText: event.target.value });\n  };\n\n  handleFileChange = (event) => {\n    this.setState({ selectedFile: event.target.files[0] });\n  };\n\n  handleSendRequest = () => {\n    const { inputText, selectedFile } = this.state;\n\n    // Create a gRPC client\n    const client = new AccessClient('http://localhost:8080', null, null);\n\n    // Read the selected image file as bytes\n    const reader = new FileReader();\n    reader.onload = () => {\n      const imageBytes = new Uint8Array(reader.result);\n\n      // Create an AccessRequest with id and image_data\n      const request = new AccessRequest();\n      request.setId(inputText);\n      request.setChunk(imageBytes);\n\n      // Send the AccessCheck request\n      client.accessCheck(request, {}, (err, response) => {\n        if (!err) {\n          const responseText = response.getAccess().toString();\n          console.log('Response:', responseText);\n          this.setState({ responseText: response.getAccess().toString() });\n        } else {\n          console.error('Error:', err);\n        }\n      });\n    };\n\n    // if (selectedFile) {\n    //   reader.readAsArrayBuffer(selectedFile);\n    // } else {\n    //   console.error('No file selected.');\n    // }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>gRPC Client</h1>\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Enter text\"\n            value={this.state.inputText}\n            onChange={this.handleTextChange}\n          />\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={this.handleFileChange}\n          />\n          <button onClick={this.handleSendRequest}>Send Request</button>\n        </div>\n        <div>\n          <p>Response:</p>\n          <p>{this.state.responseText}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GrpcClient;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}